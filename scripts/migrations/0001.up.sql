CREATE TABLE IF NOT EXISTS users_role (
  id INT(11) NOT NULL PRIMARY KEY,
  name VARCHAR(50) NOT NULL,
  code INT(2) NOT NULL,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO users_role (id, name, code) VALUES ROW(1, 'visitor', 0), ROW(2, 'manager', 10), ROW(3, 'technician', 20);

CREATE TABLE IF NOT EXISTS users (
  id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(50) NOT NULL,
  username VARCHAR(30) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL,
  user_role_id INT(11) NOT NULL,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_role_id) REFERENCES users_role (id)
);

CREATE TABLE IF NOT EXISTS tasks (
  id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(100) NOT NULL,
  description VARCHAR(2500) NOT NULL,
  created_by_user_id INT(11) NOT NULL,
  deleted_by_user_id INT(11) DEFAULT NULL,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  finished_at TIMESTAMP DEFAULT NULL,
  deleted_at TIMESTAMP  DEFAULT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (created_by_user_id) REFERENCES users (id),
  FOREIGN KEY (deleted_by_user_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS migrations (
  name VARCHAR(100) NOT NULL PRIMARY KEY,
  applied_at TIMESTAMP NOT NULL
);

INSERT INTO migrations VALUES ('0001.up.sql', NOW());